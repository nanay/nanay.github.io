{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Error.js","componentes/Clima.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","role","titulo","Formulario","ciudadRef","React","createRef","paisRef","buscarClima","e","preventDefault","respuesta","ciudad","_this","current","value","pais","datosConsulta","onSubmit","this","id","ref","type","htmlFor","defaultValue","Component","Error","mensaje","Clima","mostrarResultado","_this$props$resultado","resultado","name","weather","main","urlIcono","concat","icon","alt","temp","toFixed","src","temp_max","temp_min","App","state","error","consulta","consultarApi","_this$state$consulta","url","fetch","then","json","datos","setState","catch","console","log","prevProps","prevState","cod","componentes_Error","componentes_Clima","componentes_Header","componentes_Formulario","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a009bae0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = (props) => {\n    return (\n        <div>\n            <nav>\n                <div className=\"nav-wrapper light-blue darken-2\">\n                    <a role=\"button\" className=\"brand-logo\">{props.titulo}</a>\n                </div>\n            </nav>\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    titulo: PropTypes.string.isRequired\n}\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component {\n\n    // crear los refs\n    ciudadRef = React.createRef();\n    paisRef = React.createRef(); \n\n    buscarClima = (e) => {\n        e.preventDefault();\n\n        // leer los ref y crear el objeto\n        const respuesta = {\n            ciudad: this.ciudadRef.current.value,\n            pais: this.paisRef.current.value\n        }\n        //console.log(respuesta);\n\n        // enviar por props\n        this.props.datosConsulta(respuesta);\n\n        //opcional resetear el form\n    }\n\n    render() { \n        return ( \n            <div className=\"contenedor-form\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <form onSubmit={this.buscarClima}>\n                            <div className=\"input-field col s12 m8 l4 offser-m2\">\n                                <input id=\"ciudad\" ref={this.ciudadRef} type=\"text\" />\n                                <label htmlFor=\"ciudad\">Ciudad:</label>\n                            </div>\n                            <div className=\"input-field col s12 m8 l4 offser-m2\">\n                                <select ref={this.paisRef}>\n                                    <option value=\"\" defaultValue>Elige un país</option>\n                                    <option value=\"AR\">Argentina</option>\n                                    <option value=\"CO\">Colombia</option>\n                                    <option value=\"CR\">Costa Rica</option>\n                                    <option value=\"ES\">España</option>\n                                    <option value=\"US\">Estados Unidos</option>\n                                    <option value=\"MX\">México</option>\n                                    <option value=\"PE\">Perú</option>\n                                </select>\n                                <label htmlFor=\"pais\">País</label>\n                            </div>\n                            <div className=\"input-field col s12 m8 l4 offser-2 buscador\">\n                                <input type=\"submit\" className=\"waves-effect waves light btn-large yellow accent-4\" value=\"Buscar...\" />\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n         );\n    }\n}\n\nFormulario.propTypes = {\n    datosConsulta: PropTypes.func.isRequired\n}\n \nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Error = (props) => {\n    return ( \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col s12 m6 offset-3\">\n                    <div className=\"card-panel red darken-4 error\">\n                        {props.mensaje}\n                    </div>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nError.propTypes = {\n    mensaje: PropTypes.string.isRequired\n}\nexport default Error;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Clima extends Component {\n\n    mostrarResultado = () => {\n\n        //obtener los datos de la consulta\n        const {name,weather, main} = this.props.resultado;\n\n        if(!name || !weather || !main) return null;\n\n        const kelvin = 273.15;\n        const urlIcono = `http://openweathermap.org/img/w/${weather[0].icon}.png`;\n        const alt = `clima de ${name}`;\n\n        return(\n            <div className=\"row\">\n                <div className=\"resultado col s12 m8 l6 offset-m2 offset-13\">\n                    <div className=\"card-panel light-blue align-center\">\n                        <span className=\"white-text\">\n                            <h2>Resultado Clima de {name}</h2>\n                            <p className=\"temperatura\">\n                                Actual: { (main.temp - kelvin).toFixed(2) } &deg;C\n                                <img src={urlIcono} alt={alt}/>\n                            </p>\n                            <p>Max. { (main.temp_max - kelvin).toFixed(0)} &deg;C</p>\n                            <p>Min. { (main.temp_min - kelvin).toFixed(0)} &deg;C</p>\n                        </span>\n                    </div>\n                </div>\n            </div>\n            \n        )\n\n    }\n\n    render() { \n\n        return ( \n            <div className=\"container\">\n                {this.mostrarResultado()}\n            </div>\n         );\n    }\n}\n\nClima.propTypes = {\n    resultado: PropTypes.object.isRequired\n}\n \nexport default Clima;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport Error from './componentes/Error';\nimport Clima from './componentes/Clima';\n\n\nclass App extends Component {\n\n  state = {\n    error: '',\n    consulta: {},\n    resultado: {}\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    if(prevState.consulta !== this.state.consulta){\n      this.consultarApi();\n    }\n    \n  }\n\n  componentDidMount() {\n    this.setState({\n      error: false\n    })\n  }\n\n  consultarApi = () => {\n    const {ciudad,pais} = this.state.consulta;\n    if(!ciudad || !pais) return null;\n\n    // leer la url y agregar el API key\n    const appId = '61b2db0230f40b3856a29a14cc47d832';\n    let url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n\n    //console.log(url);\n    // query con fecht api\n    fetch(url)\n      .then(respuesta => {\n        return respuesta.json();\n      })\n      .then(datos => {\n        this.setState({\n          resultado: datos\n        })\n      })\n      .catch(error =>{\n        console.log(error)\n      })\n\n  }\n\n  datosConsulta = respuesta => {\n      if(respuesta.ciudad === '' || respuesta.pais === ''){\n        this.setState({\n          error:true\n        })\n      }else{\n        this.setState({\n          consulta:respuesta,\n          error:false\n        })\n      }\n  }\n\n  render() {\n\n    const {error} = this.state,\n          {cod} = this.state.resultado;\n\n    let resultado;\n\n    if(error){\n        resultado = <Error mensaje=\"Ambos campos son obligatorios\" />\n    }\n    else if(cod === \"404\"){\n      resultado = <Error mensaje=\"Ciudad no encontrada\" />\n    }else{\n      resultado = <Clima resultado={this.state.resultado} />\n    }\n\n    return (\n      <div className=\"app\">\n        <Header\n          titulo = 'Clima React' \n        />\n\n        <Formulario\n          datosConsulta = {this.datosConsulta} \n        />\n        {resultado}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}